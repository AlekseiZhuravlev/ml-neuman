model:
  nerf_model:
    class_path: nerf_models.nerf_small_no_warp.NeuralRadianceField

  offset_module:
    class_path: offset.offset_module.OffsetModule
    init_args:
      offset_net:
        class_path: nerf_models.nerf_small_no_warp.OffsetNetworkNoDir
      offset_scale: 0.3
      offset_delay: 0

  loss_func_color:
    class_path: losses.huber.HuberLoss

  sil_loss_world:
    class_path: losses.sil_loss_world.SilhouetteLossWorld
    init_args:
      loss_func:
        class_path: losses.huber.HuberLoss
      sil_loss_start_factor: 1
      sil_loss_epochs: -1

  sil_loss_can:
    class_path: losses.sil_loss_world.SilhouetteLossWorld
    init_args:
      loss_func:
        class_path: losses.huber.HuberLoss
      sil_loss_start_factor: 1
      sil_loss_epochs: -1

  renderer_warp:
    class_path: renderers.renderer_warp.RendererWarp
    init_args:
      use_offset_net: True

  enable_offset_net: ${model.renderer_warp.init_args.use_offset_net}


data:
#  data_path: /home/azhuavlev/Desktop/Data/InterHand_Neuman/03
  data_path: /home/azhuavlev/Desktop/Data/InterHand_Neuman/07_cam5_im12
  bg_rm_dilation: -1


trainer:
  max_epochs: 5001
  default_root_dir: /home/azhuavlev/Desktop/Results/neuman_custom/
  check_val_every_n_epoch: 250
  log_every_n_steps: 20
  logger:
    class_path: lightning.pytorch.loggers.TensorBoardLogger
    init_args:
      save_dir: ${trainer.default_root_dir}
      version: testOffsetNet_small_colorLoss_dynamic_delay0_lr5e-5

  strategy:
    class_path: lightning.pytorch.strategies.DDPStrategy
    init_args:
      find_unused_parameters: True

# TODO: check how Ts are created in SMPL, can we manually create more?
